name: Backend CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    name: Deploy Backend

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Copy backend code (excluding .git) to the runner
        run: |
          shopt -s dotglob  # Enable copying of hidden files like .env
          rsync -av --exclude='.git' --exclude='node_modules' /home/ubuntu/actions-runner-node/_work/SL-IL-platform-backend/SL-IL-platform-backend/* /home/ubuntu/actions-runner-node/

      - name: Build and deploy the backend
        run: |
          cd /home/ubuntu/actions-runner-node
          docker-compose up -d --build backend  # Only rebuild and restart the backend, MongoDB is unaffected
          env:
            NODE_ENV: ${{ secrets.NODE_ENV }}
            BCRYPT_SALT_ROUNDS: ${{ secrets.BCRYPT_SALT_ROUNDS }}
            CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
            CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
            DB_URL: ${{ secrets.DB_URL }}
            EMAIL_APP_PASS: ${{ secrets.EMAIL_APP_PASS }}
            EMAIL_NODEMAILER: ${{ secrets.EMAIL_NODEMAILER }}
            JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
            JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
            JWT_ACCESS_EXPIRES_IN: ${{ secrets.JWT_ACCESS_EXPIRES_IN }}
            JWT_REFRESH_EXPIRES_IN: ${{ secrets.JWT_REFRESH_EXPIRES_IN }}
            RESET_PASS_UI_LINK: ${{ secrets.RESET_PASS_UI_LINK }}
            SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
            SUPER_ADMIN_PASS: ${{ secrets.SUPER_ADMIN_PASS }}
            URL_FRONT: ${{ secrets.URL_FRONT }}
            PORT: ${{ secrets.PORT }}
